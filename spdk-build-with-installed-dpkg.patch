From c7630538001fdaf789433e814e914f19b2182fa2 Mon Sep 17 00:00:00 2001
From: "Brian J. Murrell" <brian.murrell@intel.com>
Date: Fri, 11 Jun 2021 08:38:37 -0400
Subject: [PATCH] Use pkg-config to get DPDK build flags

Signed-off-by: Brian J. Murrell <brian.murrell@intel.com>
---
 CONFIG              |  5 +++++
 configure           |  8 +++++++-
 lib/env_dpdk/env.mk | 38 +++++++++++++++++++++++++++-----------
 3 files changed, 39 insertions(+), 12 deletions(-)

diff --git a/CONFIG b/CONFIG
index a4e76204d00..7d24876803d 100644
--- a/CONFIG
+++ b/CONFIG
@@ -93,6 +93,11 @@ CONFIG_DPDK_DIR=
 # This directory should contain 'include' and 'lib' directories for WPDK.
 CONFIG_WPDK_DIR=
 
+# Alternatively, this should contain the cflags to use for DPDK
+CONFIG_DPDK_CFLAGS=
+# and the linker lib flags
+CONFIG_DPDK_LIBS_FLAGS=
+
 # Build SPDK FIO plugin. Requires CONFIG_FIO_SOURCE_DIR set to a valid
 # fio source code directory.
 CONFIG_FIO_PLUGIN=n
diff --git a/configure b/configure
index 7438b91a6c5..7a9c3266d16 100755
--- a/configure
+++ b/configure
@@ -284,6 +284,9 @@ for i in "$@"; do
 		--disable-cet)
 			CONFIG[CET]=n
 			;;
+		--with-dpdk)
+			CONFIG[DPDK_DIR]=use-pkg-config
+			;;
 		--with-dpdk=*)
 			check_dir "$i"
 			CONFIG[DPDK_DIR]=$(readlink -f ${i#*=})
@@ -535,7 +538,10 @@ fi
 if [ -z "${CONFIG[ENV]}" ]; then
 	CONFIG[ENV]=$rootdir/lib/env_dpdk
 	echo "Using default SPDK env in ${CONFIG[ENV]}"
-	if [ -z "${CONFIG[DPDK_DIR]}" ]; then
+	if [ "${CONFIG[DPDK_DIR]}" = "use-pkg-config" ]; then
+		CONFIG[DPDK_CFLAGS]=$(pkg-config --cflags-only-I libdpdk)
+		CONFIG[DPDK_LIBS_FLAGS]=$(pkg-config --libs libdpdk)
+	elif [ -z "${CONFIG[DPDK_DIR]}" ]; then
 		if [ ! -f "$rootdir"/dpdk/config/meson.build ]; then
 			echo "DPDK not found; please specify --with-dpdk=<path> or run:"
 			echo
diff --git a/lib/env_dpdk/env.mk b/lib/env_dpdk/env.mk
index 8edaf855890..e2d33b27f37 100644
--- a/lib/env_dpdk/env.mk
+++ b/lib/env_dpdk/env.mk
@@ -40,7 +40,23 @@
 DPDK_DIR = $(CONFIG_DPDK_DIR)
 
 export DPDK_ABS_DIR = $(abspath $(DPDK_DIR))
-
+export DPDK_ABS_LIBDIR = $(abspath $(DPDK_DIR))/lib
+
+ifeq ($(DPDK_DIR),use-pkg-config)
+DPDK_INC := $(CONFIG_DPDK_CFLAGS)
+DPDK_LIB_EXT = .so
+DPDK_LIB_LIST := $(subst -l,,$(CONFIG_DPDK_LIBS_FLAGS))
+# add private DPDK library
+DPDK_LIB_LIST += rte_bus_pci
+export DPDK_ABS_LIBDIR = /usr/lib/x86_64-linux-gnu
+define dpdk_lib_list_to_libs
+$(1:%=-l%)
+endef
+# -L because private DPDK library is used
+define dpdk_env_linker_args
+$(ENV_DPDK_FILE) -L /usr/lib/x86_64-linux-gnu/dpdk/pmds-20.0/ -Wl,--whole-archive,--no-as-needed $(call dpdk_lib_list_to_libs,$1) -Wl,--no-whole-archive
+endef
+else
 ifneq (, $(wildcard $(DPDK_ABS_DIR)/include/rte_config.h))
 DPDK_INC_DIR := $(DPDK_ABS_DIR)/include
 else
@@ -55,7 +71,7 @@ DPDK_LIB_LIST += rte_power rte_ethdev rte_net
 endif
 
 # DPDK 20.05 eal dependency
-ifneq (, $(wildcard $(DPDK_ABS_DIR)/lib/librte_telemetry.*))
+ifneq (, $(wildcard $(DPDK_ABS_LIBDIR/librte_telemetry.*))
 DPDK_LIB_LIST += rte_telemetry
 endif
 
@@ -66,7 +82,7 @@ DPDK_FRAMEWORK=n
 ifeq ($(CONFIG_CRYPTO),y)
 DPDK_FRAMEWORK=y
 DPDK_LIB_LIST += rte_reorder
-ifneq (, $(wildcard $(DPDK_ABS_DIR)/lib/librte_crypto_aesni_mb.*))
+ifneq (, $(wildcard $(DPDK_ABS_LIBDIR/librte_crypto_aesni_mb.*))
 DPDK_LIB_LIST += rte_crypto_aesni_mb
 else
 # PMD name for DPDK 20.08 and earlier
@@ -76,7 +92,7 @@ endif
 
 ifeq ($(CONFIG_REDUCE),y)
 DPDK_FRAMEWORK=y
-ifneq (, $(wildcard $(DPDK_ABS_DIR)/lib/librte_compress_isal.*))
+ifneq (, $(wildcard $(DPDK_ABS_LIBDIR/librte_compress_isal.*))
 DPDK_LIB_LIST += rte_compress_isal
 else
 # PMD name for DPDK 20.08 and earlier
@@ -86,7 +102,7 @@ endif
 
 ifeq ($(DPDK_FRAMEWORK),y)
 DPDK_LIB_LIST += rte_cryptodev rte_compressdev rte_bus_vdev
-ifneq (, $(wildcard $(DPDK_ABS_DIR)/lib/librte_common_qat.*))
+ifneq (, $(wildcard $(DPDK_ABS_LIBDIR/librte_common_qat.*))
 DPDK_LIB_LIST += rte_common_qat
 else
 # PMD name for DPDK 20.08 and earlier
@@ -94,7 +110,7 @@ DPDK_LIB_LIST += rte_pmd_qat
 endif
 endif
 
-ifneq (, $(wildcard $(DPDK_ABS_DIR)/lib/librte_kvargs.*))
+ifneq (, $(wildcard $(DPDK_ABS_LIBDIR/librte_kvargs.*))
 DPDK_LIB_LIST += rte_kvargs
 endif
 
@@ -114,13 +130,13 @@ endif
 
 ifeq ($(LINK_HASH),y)
 DPDK_LIB_LIST += rte_hash
-ifneq (, $(wildcard $(DPDK_ABS_DIR)/lib/librte_rcu.*))
+ifneq (, $(wildcard $(DPDK_ABS_LIBDIR/librte_rcu.*))
 DPDK_LIB_LIST += rte_rcu
 endif
 endif
 
-DPDK_SHARED_LIB = $(DPDK_LIB_LIST:%=$(DPDK_ABS_DIR)/lib/lib%.so)
-DPDK_STATIC_LIB = $(DPDK_LIB_LIST:%=$(DPDK_ABS_DIR)/lib/lib%.a)
+DPDK_SHARED_LIB = $(DPDK_LIB_LIST:%=$(DPDK_ABS_LIBDIR/lib%.so)
+DPDK_STATIC_LIB = $(DPDK_LIB_LIST:%=$(DPDK_ABS_LIBDIR/lib%.a)
 DPDK_SHARED_LIB_LINKER_ARGS = $(call add_no_as_needed,$(DPDK_SHARED_LIB))
 DPDK_STATIC_LIB_LINKER_ARGS = $(call add_whole_archive,$(DPDK_STATIC_LIB))
 
@@ -160,12 +176,12 @@ endif
 ifeq ($(CONFIG_SHARED),y)
 ENV_DPDK_FILE = $(call spdk_lib_list_to_shared_libs,env_dpdk)
 ENV_LIBS = $(ENV_DPDK_FILE) $(DPDK_SHARED_LIB)
-DPDK_LINKER_ARGS = -Wl,-rpath-link $(DPDK_ABS_DIR)/lib $(DPDK_SHARED_LIB_LINKER_ARGS)
+DPDK_LINKER_ARGS = -Wl,-rpath-link $(DPDK_ABS_LIBDIR $(DPDK_SHARED_LIB_LINKER_ARGS)
 ENV_LINKER_ARGS = $(ENV_DPDK_FILE) $(DPDK_LINKER_ARGS)
 else
 ENV_DPDK_FILE = $(call spdk_lib_list_to_static_libs,env_dpdk)
 ENV_LIBS = $(ENV_DPDK_FILE) $(DPDK_STATIC_LIB)
-DPDK_LINKER_ARGS = -Wl,-rpath-link $(DPDK_ABS_DIR)/lib $(DPDK_STATIC_LIB_LINKER_ARGS)
+DPDK_LINKER_ARGS = -Wl,-rpath-link $(DPDK_ABS_LIBDIR $(DPDK_STATIC_LIB_LINKER_ARGS)
 ENV_LINKER_ARGS = $(ENV_DPDK_FILE) $(DPDK_LINKER_ARGS)
 ENV_LINKER_ARGS += $(DPDK_PRIVATE_LINKER_ARGS)
 endif
