From ac81b7bd2b229776aaed2aed5534ce8718b6eaaf Mon Sep 17 00:00:00 2001
From: Tomasz Zawadzki <tomasz.zawadzki@intel.com>
Date: Fri, 05 Feb 2021 03:50:56 -0500
Subject: [PATCH] build/dpdk: do not assume libdir is always "lib"

When building DPDK with meson there is --libdir parameter
that defines name of directory for libraries.
This defaults to "lib64" if not passed, but when packaging
for any distro it can be adjusted as need (ex. just "lib").

SPDK always forced this parameter to "lib" with the submodule
and tests for external DPDK did too.

This patch removes this assumption and finds a sub-directory
containing the libraries in install directory.
Based by looking up rte_eal library location.

Together with this, the submodule and external DPDK tests no longer
force the parameter and rely on defaults.

Signed-off-by: Tomasz Zawadzki <tomasz.zawadzki@intel.com>
Change-Id: I265c54fd84664bb49658bea65a67eabbc01f4a89
---

diff --git a/autobuild.sh b/autobuild.sh
index d451717..e9e9fd6 100755
--- a/autobuild.sh
+++ b/autobuild.sh
@@ -128,7 +128,7 @@
 		git am dpdk-qat.patch
 	fi
 
-	meson build-tmp --prefix="$external_dpdk_dir" --libdir lib \
+	meson build-tmp --prefix="$external_dpdk_dir" \
 		-Denable_docs=false -Denable_kmods=false -Dtests=false \
 		-Dc_link_args="$dpdk_ldflags" -Dc_args="$dpdk_cflags" \
 		-Dmachine=native -Ddisable_drivers=$(printf "%s," "${DPDK_DISABLED_DRIVERS[@]}")
diff --git a/configure b/configure
index df85c9a..50a25fa 100755
--- a/configure
+++ b/configure
@@ -46,7 +46,7 @@
 	echo "Valid dependencies are listed below."
 	echo " dpdk                      Build against a custom dpdk version. By default, the dpdk"
 	echo "                           submodule in spdk tree will be used."
-	echo "                           example: /usr/share/dpdk/x86_64-default-linuxapp-gcc"
+	echo "                           example: /usr/local"
 	echo " env                       Use an alternate environment implementation instead of DPDK."
 	echo "                           Implies --without-dpdk."
 	echo " idxd                      Build the IDXD library and accel framework plug-in module."
diff --git a/dpdkbuild/Makefile b/dpdkbuild/Makefile
index 3c058b8..ef49038 100644
--- a/dpdkbuild/Makefile
+++ b/dpdkbuild/Makefile
@@ -157,7 +157,7 @@
 
 $(SPDK_ROOT_DIR)/dpdk/build-tmp: $(SPDK_ROOT_DIR)/mk/cc.mk $(SPDK_ROOT_DIR)/include/spdk/config.h
 	$(Q)rm -rf $(SPDK_ROOT_DIR)/dpdk/build $(SPDK_ROOT_DIR)/dpdk/build-tmp
-	$(Q)cd "$(SPDK_ROOT_DIR)/dpdk"; CC="$(SUB_CC)" meson --prefix="$(MESON_PREFIX)" --libdir lib -Dc_args="$(DPDK_CFLAGS)" -Dc_link_args="$(DPDK_LDFLAGS)" $(DPDK_OPTS) -Ddisable_drivers="$(shell echo $(DPDK_DISABLED_DRVERS) | sed -E "s/ +/,/g")" build-tmp
+	$(Q)cd "$(SPDK_ROOT_DIR)/dpdk"; CC="$(SUB_CC)" meson --prefix="$(MESON_PREFIX)" -Dc_args="$(DPDK_CFLAGS)" -Dc_link_args="$(DPDK_LDFLAGS)" $(DPDK_OPTS) -Ddisable_drivers="$(shell echo $(DPDK_DISABLED_DRVERS) | sed -E "s/ +/,/g")" build-tmp
 	$(Q)sed $(SED_INPLACE_FLAG) 's/#define RTE_EAL_PMD_PATH .*/#define RTE_EAL_PMD_PATH ""/g' $(SPDK_ROOT_DIR)/dpdk/build-tmp/rte_build_config.h
 	$(Q) \
 	# TODO Meson build adds libbsd dependency when it's available. This means any app will be \
diff --git a/lib/env_dpdk/env.mk b/lib/env_dpdk/env.mk
index f44f515..2ae0633 100644
--- a/lib/env_dpdk/env.mk
+++ b/lib/env_dpdk/env.mk
@@ -48,6 +48,9 @@
 endif
 DPDK_INC := -I$(DPDK_INC_DIR)
 
+# Define libdir (ex. lib or lib64) based on first match to rte_eal
+DPDK_LIB_DIR := $(abspath $(dir $(shell find $(DPDK_ABS_DIR) -mindepth 2 -maxdepth 2 -type f -name "librte_eal.*" -print0 -quit)))
+
 DPDK_LIB_LIST = rte_eal rte_mempool rte_ring rte_mbuf rte_pci rte_bus_pci rte_mempool_ring
 
 ifeq ($(OS),Linux)
@@ -55,7 +58,7 @@
 endif
 
 # DPDK 20.05 eal dependency
-ifneq (, $(wildcard $(DPDK_ABS_DIR)/lib/librte_telemetry.*))
+ifneq (, $(wildcard $(DPDK_LIB_DIR)/librte_telemetry.*))
 DPDK_LIB_LIST += rte_telemetry
 endif
 
@@ -66,7 +69,7 @@
 ifeq ($(CONFIG_CRYPTO),y)
 DPDK_FRAMEWORK=y
 DPDK_LIB_LIST += rte_reorder
-ifneq (, $(wildcard $(DPDK_ABS_DIR)/lib/librte_crypto_aesni_mb.*))
+ifneq (, $(wildcard $(DPDK_LIB_DIR)/librte_crypto_aesni_mb.*))
 DPDK_LIB_LIST += rte_crypto_aesni_mb
 else
 # PMD name for DPDK 20.08 and earlier
@@ -76,7 +79,7 @@
 
 ifeq ($(CONFIG_REDUCE),y)
 DPDK_FRAMEWORK=y
-ifneq (, $(wildcard $(DPDK_ABS_DIR)/lib/librte_compress_isal.*))
+ifneq (, $(wildcard $(DPDK_LIB_DIR)/librte_compress_isal.*))
 DPDK_LIB_LIST += rte_compress_isal
 else
 # PMD name for DPDK 20.08 and earlier
@@ -86,7 +89,7 @@
 
 ifeq ($(DPDK_FRAMEWORK),y)
 DPDK_LIB_LIST += rte_cryptodev rte_compressdev rte_bus_vdev
-ifneq (, $(wildcard $(DPDK_ABS_DIR)/lib/librte_common_qat.*))
+ifneq (, $(wildcard $(DPDK_LIB_DIR)/librte_common_qat.*))
 DPDK_LIB_LIST += rte_common_qat
 else
 # PMD name for DPDK 20.08 and earlier
@@ -94,7 +97,7 @@
 endif
 endif
 
-ifneq (, $(wildcard $(DPDK_ABS_DIR)/lib/librte_kvargs.*))
+ifneq (, $(wildcard $(DPDK_LIB_DIR)/librte_kvargs.*))
 DPDK_LIB_LIST += rte_kvargs
 endif
 
@@ -114,13 +117,13 @@
 
 ifeq ($(LINK_HASH),y)
 DPDK_LIB_LIST += rte_hash
-ifneq (, $(wildcard $(DPDK_ABS_DIR)/lib/librte_rcu.*))
+ifneq (, $(wildcard $(DPDK_LIB_DIR)/librte_rcu.*))
 DPDK_LIB_LIST += rte_rcu
 endif
 endif
 
-DPDK_SHARED_LIB = $(DPDK_LIB_LIST:%=$(DPDK_ABS_DIR)/lib/lib%.so)
-DPDK_STATIC_LIB = $(DPDK_LIB_LIST:%=$(DPDK_ABS_DIR)/lib/lib%.a)
+DPDK_SHARED_LIB = $(DPDK_LIB_LIST:%=$(DPDK_LIB_DIR)/lib%.so)
+DPDK_STATIC_LIB = $(DPDK_LIB_LIST:%=$(DPDK_LIB_DIR)/lib%.a)
 DPDK_SHARED_LIB_LINKER_ARGS = $(call add_no_as_needed,$(DPDK_SHARED_LIB))
 DPDK_STATIC_LIB_LINKER_ARGS = $(call add_whole_archive,$(DPDK_STATIC_LIB))
 
@@ -160,12 +163,12 @@
 ifeq ($(CONFIG_SHARED),y)
 ENV_DPDK_FILE = $(call spdk_lib_list_to_shared_libs,env_dpdk)
 ENV_LIBS = $(ENV_DPDK_FILE) $(DPDK_SHARED_LIB)
-DPDK_LINKER_ARGS = -Wl,-rpath-link $(DPDK_ABS_DIR)/lib $(DPDK_SHARED_LIB_LINKER_ARGS)
+DPDK_LINKER_ARGS = -Wl,-rpath-link $(DPDK_LIB_DIR) $(DPDK_SHARED_LIB_LINKER_ARGS)
 ENV_LINKER_ARGS = $(ENV_DPDK_FILE) $(DPDK_LINKER_ARGS)
 else
 ENV_DPDK_FILE = $(call spdk_lib_list_to_static_libs,env_dpdk)
 ENV_LIBS = $(ENV_DPDK_FILE) $(DPDK_STATIC_LIB)
-DPDK_LINKER_ARGS = -Wl,-rpath-link $(DPDK_ABS_DIR)/lib $(DPDK_STATIC_LIB_LINKER_ARGS)
+DPDK_LINKER_ARGS = -Wl,-rpath-link $(DPDK_LIB_DIR) $(DPDK_STATIC_LIB_LINKER_ARGS)
 ENV_LINKER_ARGS = $(ENV_DPDK_FILE) $(DPDK_LINKER_ARGS)
 ENV_LINKER_ARGS += $(DPDK_PRIVATE_LINKER_ARGS)
 endif
diff --git a/test/external_code/test_make.sh b/test/external_code/test_make.sh
index d98cac3..e91ad99 100755
--- a/test/external_code/test_make.sh
+++ b/test/external_code/test_make.sh
@@ -21,7 +21,8 @@
 
 export SPDK_HEADER_DIR="$SPDK_DIR/include"
 export SPDK_LIB_DIR="$SPDK_DIR/build/lib"
-export DPDK_LIB_DIR="${SPDK_RUN_EXTERNAL_DPDK:-$SPDK_DIR/dpdk/build}/lib"
+DPDK_LIB_DIR="$(dirname "$(find "${SPDK_RUN_EXTERNAL_DPDK:-$SPDK_DIR/dpdk/build}" -name "librte_eal\.*" -print -quit)")"
+export DPDK_LIB_DIR
 export VFIO_LIB_DIR="$SPDK_DIR/libvfio-user/build/release/lib"
 export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$SPDK_LIB_DIR:$DPDK_LIB_DIR:$VFIO_LIB_DIR:"$test_root/passthru"
 
